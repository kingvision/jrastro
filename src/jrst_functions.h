/*
    This file is part of JRastro.

    JRastro is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    JRastro is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with JRastro.  If not, see <http://www.gnu.org/licenses/>.
*/
/* Do not edit. File generated by rastro. */

#ifndef __AUTO_RASTRO_FILE_H__
#define __AUTO_RASTRO_FILE_H__
#include <rastro.h>

/* Rastro function prototype for 'i' */
void rst_event_i_ptr(rst_buffer_t *ptr, u_int16_t type, u_int32_t i0);
void rst_event_i_f_ (int16_t *type, int32_t* i0);
#define rst_event_i(type, i0) rst_event_i_ptr(RST_PTR, type, i0)

/* Rastro function prototype for 'ii' */
void rst_event_ii_ptr(rst_buffer_t *ptr, u_int16_t type, u_int32_t i0, u_int32_t i1);
void rst_event_ii_f_ (int16_t *type, int32_t* i0, int32_t* i1);
#define rst_event_ii(type, i0, i1) rst_event_ii_ptr(RST_PTR, type, i0, i1)

/* Rastro function prototype for 'is' */
void rst_event_is_ptr(rst_buffer_t *ptr, u_int16_t type, u_int32_t i0, const char* s0);
void rst_event_is_f_ (int16_t *type, int32_t* i0, const char* s0);
#define rst_event_is(type, i0, s0) rst_event_is_ptr(RST_PTR, type, i0, s0)

/* Rastro function prototype for 'isiii' */
void rst_event_isiii_ptr(rst_buffer_t *ptr, u_int16_t type, u_int32_t i0, const char* s0, u_int32_t i1, u_int32_t i2, u_int32_t i3);
void rst_event_isiii_f_ (int16_t *type, int32_t* i0, const char* s0, int32_t* i1, int32_t* i2, int32_t* i3);
#define rst_event_isiii(type, i0, s0, i1, i2, i3) rst_event_isiii_ptr(RST_PTR, type, i0, s0, i1, i2, i3)

/* Rastro function prototype for 'liis' */
void rst_event_liis_ptr(rst_buffer_t *ptr, u_int16_t type, u_int64_t l0, u_int32_t i0, u_int32_t i1, const char* s0);
void rst_event_liis_f_ (int16_t *type, int64_t* l0, int32_t* i0, int32_t* i1, const char* s0);
#define rst_event_liis(type, l0, i0, i1, s0) rst_event_liis_ptr(RST_PTR, type, l0, i0, i1, s0)

/* Rastro function prototype for 'lis' */
void rst_event_lis_ptr(rst_buffer_t *ptr, u_int16_t type, u_int64_t l0, u_int32_t i0, const char* s0);
void rst_event_lis_f_ (int16_t *type, int64_t* l0, int32_t* i0, const char* s0);
#define rst_event_lis(type, l0, i0, s0) rst_event_lis_ptr(RST_PTR, type, l0, i0, s0)

/* Rastro function prototype for 'isii' */
void rst_event_isii_ptr(rst_buffer_t *ptr, u_int16_t type, u_int32_t i0, const char* s0, u_int32_t i1, u_int32_t i2);
void rst_event_isii_f_ (int16_t *type, int32_t* i0, const char* s0, int32_t* i1, int32_t* i2);
#define rst_event_isii(type, i0, s0, i1, i2) rst_event_isii_ptr(RST_PTR, type, i0, s0, i1, i2)

/* Rastro function prototype for 's' */
void rst_event_s_ptr(rst_buffer_t *ptr, u_int16_t type, const char* s0);
void rst_event_s_f_ (int16_t *type, const char* s0);
#define rst_event_s(type, s0) rst_event_s_ptr(RST_PTR, type, s0)

void rst_init_f_(int64_t *id1, int64_t *id2);
void rst_finalize_f_ (void);

#endif //__AUTO_RASTRO_FILE_H__
